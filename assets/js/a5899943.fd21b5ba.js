"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9165],{759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"modules/tts","title":"tts","description":"Text to speech module (TTS) are used by Linguist to speak text that user translate.","source":"@site/../../docs/modules/tts.md","sourceDirName":"modules","slug":"/modules/tts","permalink":"/docs/modules/tts","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Offline translation","permalink":"/docs/manuals/OfflineTranslation"}}');var a=n(4848),r=n(1184);const o={},u=void 0,l={},i=[{value:"TTS API",id:"tts-api",level:2},{value:"TTS class signature",id:"tts-class-signature",level:3},{value:"Example",id:"example",level:2}];function c(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Text to speech module (TTS) are used by Linguist to speak text that user translate."}),"\n",(0,a.jsx)(t.h2,{id:"tts-api",children:"TTS API"}),"\n",(0,a.jsx)(t.p,{children:"Code must have a translator class and this object must be the last object in the code."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"class MyTTS {\n\t// ...\n}\n\n// some other code may be after declaration\nconsole.log('Hello world');\n\n// last object in the code must be a translator\nMyTTS;\n"})}),"\n",(0,a.jsx)(t.h3,{id:"tts-class-signature",children:"TTS class signature"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"/**\n * Object with audio data\n */\ntype TTSAudioBuffer = {\n\t/**\n\t * Audio mimetype\n\t */\n\ttype: string;\n\n\t/**\n\t * Buffer contains audio bytes\n\t */\n\tbuffer: ArrayBuffer;\n};\n\nclass TTS {\n\t/**\n\t * Method that return buffer with audio to speak text\n\t*/\n\tpublic getAudioBuffer(text: string, language: string) => Promise<TTSAudioBuffer>;\n\n\t/**\n\t * Return an array of supported languages as ISO 639-1 codes\n\t*/\n\tstatic getSupportedLanguages(): langCode[];\n\n}\n"})}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.p,{children:"Example of a dummy TTS module. In your code, feel free to use HTTP requests to any urls."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"class FakeTTS {\n\tgetAudioBuffer = async (text, language) => {\n\t\tconst dummyAudioUrl = 'https://github.com/translate-tools/linguist/blob/d447cceee59894303742449bbf24caf7c3668e99/src/app/Background/TTS/TTSManager/__tests__/sample.mp3?raw=true';\n\n\t\tconst buffer = await fetch(dummyAudioUrl).then(r => r.arrayBuffer());\n\t\treturn {\n\t\t\ttype: 'audio/mpeg',\n\t\t\tbuffer,\n\t\t};\n\t}\n\n\tstatic getSupportedLanguages() {\n\t\treturn ['en', 'de', 'ja'];\n\t}\n}\n\nFakeTTS;\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>u});var s=n(6540);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);