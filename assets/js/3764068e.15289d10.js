"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2052],{1184:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var r=i(6540);const o={},t=r.createContext(o);function s(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(t.Provider,{value:n},e.children)}},3367:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Development","title":"Development","description":"The build scripts are designed to run on unix platform (linux, mac, bsd, etc), if you on windows, try to install cygwin.","source":"@site/../../docs/Development.md","sourceDirName":".","slug":"/Development","permalink":"/docs/Development","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"CustomTranslator","permalink":"/docs/CustomTranslator"},"next":{"title":"Introduction","permalink":"/docs/"}}');var o=i(4848),t=i(1184);const s={},l="Build from sources",d={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Build",id:"build",level:2},{value:"Partial build",id:"partial-build",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The build scripts are designed to run on unix platform (linux, mac, bsd, etc), if you on windows, try to install ",(0,o.jsx)(n.a,{href:"https://www.cygwin.com/",children:"cygwin"}),"."]}),"\n",(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"build-from-sources",children:"Build from sources"})}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"AMD64 platform. Currently ARM platform is not tested, so build may fail there"}),"\n",(0,o.jsx)(n.li,{children:"UNIX-like OS"}),"\n",(0,o.jsx)(n.li,{children:"Installed make"}),"\n",(0,o.jsx)(n.li,{children:"Installed docker"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["If you have ARM CPU and want to build the code, you can emulate AMD64 and run build there. You may also try to ",(0,o.jsx)(n.a,{href:"https://stackoverflow.com/questions/65612411/forcing-docker-to-use-linux-amd64-platform-by-default-on-macos",children:"enable emulation"})," on docker level. If you use docker - set variable ",(0,o.jsx)(n.code,{children:"export DOCKER_DEFAULT_PLATFORM=linux/amd64"})," or provide option ",(0,o.jsx)(n.code,{children:"platform: linux/amd64"})," to a ",(0,o.jsx)(n.code,{children:"docker-compose.yml"})," file."]}),"\n",(0,o.jsx)(n.h2,{id:"build",children:"Build"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Create ",(0,o.jsx)(n.code,{children:".env"})," file. You may copy file ",(0,o.jsx)(n.code,{children:".env.config"})," and configure it with your options"]}),"\n",(0,o.jsxs)(n.li,{children:["Run ",(0,o.jsx)(n.code,{children:"make build"})," to build whole project, pack it, and check it with linter"]}),"\n",(0,o.jsxs)(n.li,{children:["Artifacts will be placed in ",(0,o.jsx)(n.code,{children:"build"})," directory"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"partial-build",children:"Partial build"}),"\n",(0,o.jsxs)(n.p,{children:["To build extension only for specific browsers, you may run ",(0,o.jsx)(n.code,{children:"make"})," with specific target like ",(0,o.jsx)(n.code,{children:"buildFirefox"}),", ",(0,o.jsx)(n.code,{children:"buildChromium"}),", etc (see ",(0,o.jsx)(n.code,{children:"makefile"})," for details). Some of targets:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"firefox"}),"\n",(0,o.jsx)(n.li,{children:"chrome"}),"\n",(0,o.jsx)(n.li,{children:"chromium: special build with auto updates not from google store"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You must install dependencies and build a third party code with ",(0,o.jsx)(n.code,{children:"make prepare buildThirdparty"})," before run specific target."]}),"\n",(0,o.jsxs)(n.p,{children:["Example command to build only firefox version: ",(0,o.jsx)(n.code,{children:"make prepare buildThirdparty buildFirefox"}),"."]}),"\n",(0,o.jsx)(n.h1,{id:"development",children:"Development"}),"\n",(0,o.jsxs)(n.p,{children:["You may run development mode with ",(0,o.jsx)(n.code,{children:"make dev"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["If you change a theme tokens, you also have to compile a theme files: ",(0,o.jsx)(n.code,{children:"npm run build:tokens"})]}),"\n",(0,o.jsxs)(n.p,{children:["To debug on android, ",(0,o.jsx)(n.a,{href:"/docs/AndroidDebug",children:"see instructions"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["To make a custom translator, see ",(0,o.jsx)(n.a,{href:"/docs/CustomTranslator",children:"translator API"}),"."]}),"\n",(0,o.jsx)(n.h1,{id:"tests",children:"Tests"}),"\n",(0,o.jsxs)(n.p,{children:["When you change code that touch any user data and interact with browser storages (",(0,o.jsx)(n.code,{children:"localStorage"}),", ",(0,o.jsx)(n.code,{children:"indexedDB"}),", ",(0,o.jsx)(n.code,{children:"browser.storage"}),", etc) or some external API, you must to add or update tests for it."]}),"\n",(0,o.jsx)(n.p,{children:"The common rule is any code that just transform data should be tested."}),"\n",(0,o.jsx)(n.p,{children:"You may a not add tests for UI, but should add tests for data."}),"\n",(0,o.jsx)(n.h1,{id:"migrations",children:"Migrations"}),"\n",(0,o.jsx)(n.p,{children:"Migrations must have app version."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);